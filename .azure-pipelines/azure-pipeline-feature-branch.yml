trigger:
  - features/*

pr:
  - features/*

variables:
  serviceName: "feat-$(Build.SourceBranchName)"

pool:
  vmImage: ubuntu-latest

stages:
  - stage: DestroyFeatureBranch
    displayName: "Destroy Feature Branch"
    dependsOn: Deploy
    jobs:
      - job: Conclude Feature Branch
        displayName: "Conclude Feature Branch"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: Bash@3
            name: setFeatureBranch
            displayName: "Set Feature Branch variable"
            inputs:
              targetType: "inline"
              script: |
                echo "##vso[task.setvariable variable=featureBranch;]$(System.PullRequest.SourceBranch)"
        # - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        # displayName: "Install Terraform 1.3.7"
        # inputs:
        #   terraformVersion: 1.3.7
        # - task: TerraformTaskV4@4
        # displayName: "Initialize Terraform"
        # inputs:
        # provider: "aws"
        # command: "init"
        # backendServiceAWS: ""
        # backendAWSBucketName: ""
        # backendAWSKey: "statefiles/dev.tfstate"
        # workingDirectory: ''
        # - task: TerraformTaskV4@4
        # displayName: 'Generate Terraform destruction plan'
        # inputs:
        #   provider: "aws"
        #   command: "plan -destroy"
        #   commandOptions: '-var="branch=$(featureBranch)" -var-file="env/dev.tfvars" -out="tfdestrplan"'
        #   environmentServiceNameAWS: ""
        #   workingDirectory: ''
        # - task: TerraformTaskV4@4
        # displayName: 'Apply Terraform destruction plan'
        # inputs:
        #   provider: "aws"
        #   command: "apply -destroy -auto-approve"
        #   commandOptions: 'tfdestrplan'
        #   environmentServiceNameAWS: ""
        #   workingDirectory: ''
